import numpy as np

def trilat(locs, radiiArray):
    estimates = []
    l1 = locs.pop(0)
    for radii in radiiArray:
        r1 = radii.pop(0)
        A = []
        b = []
        for (loc, radius) in zip(locs, radii):
            A.append([2*(loc[0] - l1[0]), 2*(loc[1] - l1[1])])
            b.append(r1**2 + (loc[0] - l1[0])**2 + (loc[1] - l1[1])**2 - radius**2)
        matrixA = np.matrix(A)
        matrixB = np.matrix(b).reshape(3,1)
        deltaX = np.matrix(l1).reshape(2,1)
        Ainv = np.linalg.pinv(matrixA)
        estimates.append(Ainv * matrixB + deltaX)
    return estimates

meterVals = [[-0.95530144922501, 1.3994379780303547, 0.5490510189788087, 1.407301232260965], [1.526791214787107, 0.5361128913714541, 0.7892493991191087, 1.4547491510405846], [1.4946428365647288, 0.8584945320902668, 4.853854473611529, 2.81412876308656], [2.7134640653433286, 0.10869857117641857, 2.9164371656858674, 2.188030433770282], [2.8958427067589843, -0.8735570427418122, 2.47841796824757, 4.270053379069697], [0.9288703351361991, 0.01762257903892861, 2.7134640653433286, 2.0348682909340616], [1.8428166884204376, 1.715741396660055, 1.8428166884204376, 0.6874620488545538], [0.9996742715028808, 3.66938755970935, 3.623402908215161, 2.0526692497991124], [0.7143640049426367, 2.7938651783722173, 1.8858658281055427, 1.4388819174298901], [1.3759244861079645, 2.3548651286414493, 1.6244955171288917, 1.94672332949481], [2.025989411841841, 3.623402908215161, 3.5436431637056764, 0.16097558453611915], [2.389450372358899, 2.6439626226887643, 0.5815802932494774, 0.734655158105546], [0.39652557142114064, 2.594798965869947, 2.298712264702576, 0.6874620488545538], [1.1618879938846605, 0.5750533467533496, 2.6045998716201813, 1.9292650088888075], [0.8030088482861379, 1.4547491510405846, 1.0730881015574467, 2.5850139214422723], [1.8858658281055427, 2.3548651286414493, -0.7481993297515217, 2.875314852091449], [0.8030088482861379, 2.206328339405897, 3.287852216167631, 0.8376031040664862], [2.5019956757510617, 1.6310769045073035, 0.792685083974527, 1.2144905838680278], [2.906131597199987, 1.825694410868278, 1.4468091093411641, 1.1024965061255547], [2.5266353080781534, 4.511367459067008, 3.420119228704055, -0.8088077071513449]]

print(trilat([[0,0], [4,0], [4,3], [0,3]], meterVals))